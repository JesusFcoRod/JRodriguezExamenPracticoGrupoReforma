@model ML.Persona
@{
    ViewBag.Title = "Formulario";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="row">
    <div class="col-12">
        <h2> Registro Persona</h2>
        <h5>Ingrese los datos de la persona: Evite usar espacios y dejar campos vacios</h5>
    </div>
</div>
<br />


@using (Html.BeginForm("Formulario", "Persona", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    <form>
        <div class="form-group">
            @Html.LabelFor(model => model.IdPersona, "ID:")
            @Html.TextBoxFor(model => model.IdPersona, new { @class = "form-control", @id = "txtIdPersona", autocomplete = "off", disabled = "disabled" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idTipo, "Tipo Persona:")
            @Html.TextBoxFor(model => model.idTipo, new { @class = "form-control", @id = "txtTipo", autocomplete = "off", disabled = "disabled" })
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Nombre)
            @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre", @placeholder = "Nombre(s)", autocomplete = "off" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Direccion)
            @Html.TextBoxFor(model => model.Direccion, new { @class = "form-control", @id = "txtDireccion", @placeholder = "Direccion", autocomplete = "off" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Edad)
            @Html.TextBoxFor(model => model.Edad, new { @class = "form-control", @id = "txtEdad", @placeholder = "Edad", autocomplete = "off" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Correo, "Correo Electronico")
            @Html.TextBoxFor(model => model.Correo, new { @class = "form-control", @id = "txtCorreo", @placeholder = "Correo Electronico", autocomplete = "off" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HabilidadPrimaria, "Habilidad Principal")
            @Html.TextBoxFor(model => model.HabilidadPrimaria, new { @class = "form-control", @id = "txtHabilidadP", @placeholder = "Habilidad Principal", autocomplete = "off" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HabilidadSecundaria, "Habilidad Secundaria")
            @Html.TextBoxFor(model => model.HabilidadSecundaria, new { @class = "form-control", @id = "txtHabilidadS", @placeholder = "Habilidad Secundaria", autocomplete = "off" })

        </div>

        <div class="glyphicon-up">
            <div class="form-group">
                <div class="col-md-3">
                    <input type="submit" value="Guardar" class="btn btn-success" />
                    @Html.ActionLink("Regresar", "Index", "Home", htmlAttributes: new { @class = "btn btn-danger" })
                </div>
            </div>
        </div>

    </form>
}


@section Scripts {
    <link rel="stylesheet" href="//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="/resources/demos/style.css">
    <script src="https://code.jquery.com/jquery-3.6.0.js"></script>
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>

    <script type="text/javascript">

        //Validacion de campos vacios

        $('#txtNombre').blur(function () {
            if ($("#txtNombre").val() == "") {
                alert("Campo Nombre obligatorio");
                return false;
            }
        });

        $('#txtDireccion').blur(function () {
            if ($("#txtDireccion").val() == "") {
                alert("Campo Dirrecion obligatorio");
                return false;
            }
        });

        $('#txtEdad').blur(function () {
            if ($("#txtEdad").val() == "") {
                alert("Campo Edad obligatorio");
                return false;
            }
        });

        $('#txtCorreo').blur(function () {
            if ($("#txtCorreo").val() == "") {
                alert("Campo Correo obligatorio");
                return false;
            }
        });

        $('#txtHabilidadP').blur(function () {
            if ($("#txtHabilidadP").val() == "") {
                alert("Campo Habilidad Principal obligatorio");
                return false;
            }
        });

        $('#txtHabilidadS').blur(function () {
            if ($("#txtHabilidadS").val() == "") {
                alert("Campo Habilidad Secundaria obligatorio");
                return false;
            }
        });

        //Validacion de espacios

        $('#txtNombre').blur(function () {
            if ($("#txtNombre").val() == " ") {
                alert("Campo Nombre no puede tener espacios");
                return false;
            }
        });

        $('#txtDireccion').blur(function () {
            if ($("#txtDireccion").val() == " ") {
                alert("Campo Dirrecion no puede tener espacios");
                return false;
            }
        });

        $('#txtEdad').blur(function () {
            if ($("#txtEdad").val() == " ") {
                alert("Campo Edad no puede tener espacios");
                return false;
            }
        });

        $('#txtCorreo').blur(function () {
            if ($("#txtCorreo").val() == " ") {
                alert("Campo Correo no puede tener espacios");
                return false;
            }
        });

        $('#txtHabilidadP').blur(function () {
            if ($("#txtHabilidadP").val() == " ") {
                alert("Campo Habilidad Principal no puede tener espacios");
                return false;
            }
        });

        $('#txtHabilidadS').blur(function () {
            if ($("#txtHabilidadS").val() == " ") {
                alert("Campo Habilidad Secundaria no puede tener espacios");
                return false;
            }
        });

        //Validacion edad
        $('#txtEdad').blur(function () {
            if (isNaN($("#txtEdad").val()) || parseInt($("#txtEdad").val()) < 10 || parseInt($("#txtEdad").val()) > 90) {
                alert("La edad debe estar entre 10 y 90 años");
                return false;
            }
        });


    </script>
}
