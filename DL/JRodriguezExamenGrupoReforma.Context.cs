//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class JRodriguezExamenGrupoReformaEntities : DbContext
    {
        public JRodriguezExamenGrupoReformaEntities()
            : base("name=JRodriguezExamenGrupoReformaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Detalles_Facturas> Detalles_Facturas { get; set; }
        public virtual DbSet<Factura> Facturas { get; set; }
        public virtual DbSet<Producto> Productos { get; set; }
        public virtual DbSet<Proveedor> Proveedors { get; set; }
        public virtual DbSet<Persona> Personas { get; set; }
    
        public virtual int PersonaAdd(string nombre, string direccion, Nullable<int> edad, string correo, string habilidadPrimaria, string habilidadSecundaria)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var habilidadPrimariaParameter = habilidadPrimaria != null ?
                new ObjectParameter("HabilidadPrimaria", habilidadPrimaria) :
                new ObjectParameter("HabilidadPrimaria", typeof(string));
    
            var habilidadSecundariaParameter = habilidadSecundaria != null ?
                new ObjectParameter("HabilidadSecundaria", habilidadSecundaria) :
                new ObjectParameter("HabilidadSecundaria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PersonaAdd", nombreParameter, direccionParameter, edadParameter, correoParameter, habilidadPrimariaParameter, habilidadSecundariaParameter);
        }
    
        public virtual ObjectResult<PersonaGetAll_Result> PersonaGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PersonaGetAll_Result>("PersonaGetAll");
        }
    
        public virtual int PersonaDelete(Nullable<int> idPersona)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PersonaDelete", idPersonaParameter);
        }
    
        public virtual ObjectResult<PersonaGetById_Result> PersonaGetById(Nullable<int> idPersona)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PersonaGetById_Result>("PersonaGetById", idPersonaParameter);
        }
    
        public virtual int PersonaUpdate(Nullable<int> idPersona, string nombre, string direccion, Nullable<int> edad, string correo, string habilidadPrimaria, string habilidadSecundaria)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var habilidadPrimariaParameter = habilidadPrimaria != null ?
                new ObjectParameter("HabilidadPrimaria", habilidadPrimaria) :
                new ObjectParameter("HabilidadPrimaria", typeof(string));
    
            var habilidadSecundariaParameter = habilidadSecundaria != null ?
                new ObjectParameter("HabilidadSecundaria", habilidadSecundaria) :
                new ObjectParameter("HabilidadSecundaria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PersonaUpdate", idPersonaParameter, nombreParameter, direccionParameter, edadParameter, correoParameter, habilidadPrimariaParameter, habilidadSecundariaParameter);
        }
    }
}
